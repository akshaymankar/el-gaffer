version: 2
jobs:
  build-elm:
    docker:
    - image: akshay0/elm-ci
    steps:
    - checkout
    - run:
        name: Run Tests
        command: cd elm && sysconfcpus -n 2 elm test
    - run:
        name: Build static site for CFCR
        command: cd elm && sysconfcpus -n 2 elm app build

    - run:
        name: Create workspace
        command: |
          set -x
          mkdir -p workspace
          mv elm/build workspace/elm

    - persist_to_workspace:
        root: workspace
        paths:
        - elm

  build-haskell:
    docker:
    - image: quay.io/haskell_works/stack-build-icu:latest
    steps:
    - checkout
    - setup_remote_docker
    - run:
        name: Install Docker client
        command: |
          set -x
          VER="17.03.0-ce"
          curl -L -o /tmp/docker-$VER.tgz https://download.docker.com/linux/static/stable/x86_64/docker-$VER.tgz
          tar -xz -C /tmp -f /tmp/docker-$VER.tgz
          mv /tmp/docker/* /usr/bin

    - run:
        name: Get resolver version
        command: grep '^resolver' stack.yaml | awk '{print $2}' > resolver.txt

    - restore_cache:
        keys:
        - stack-{{ checksum "resolver.txt" }}

    - restore_cache:
        keys:
        - stack-work-{{ checksum "resolver.txt" }}-{{ checksum "stack.yaml" }}

    - run:
        name: Stack setup
        command: stack setup

    - run:
        name: Compile
        command: stack test --no-run-tests -j 2

    - save_cache:
        key: stack-{{ checksum "resolver.txt" }}
        paths:
          - ~/.stack

    - save_cache:
        key: stack-work-{{ checksum "resolver.txt" }}-{{ checksum "stack.yaml" }}
        paths:
          - .stack-work

    - run:
        name: Run Tests
        command: stack test

    - run:
        name: Create base image
        command: docker build --no-cache -t akshay0/el-patron-api-base -f Dockerfile.base .

    - run:
        name: Build Image
        command: stack image container

    - run:
        name: Save the docker image
        command: |
          mkdir -p workspace
          docker run --rm akshay0/el-patron-api:latest el-patron --help && \
          docker save akshay0/el-patron-api:latest | gzip > workspace/el-patron-api-image.tgz

    - persist_to_workspace:
        root: workspace
        paths:
        - el-patron-api-image.tgz

  add-compiled-elm-to-docker-image:
    docker:
    - image: docker:stable
    steps:
    - setup_remote_docker
    - attach_workspace:
        at: /tmp/workspace
    - run:
        name: Create final docker image
        command: |
          set -e
          echo "FROM akshay0/el-patron-api:latest
          ADD elm /elm" > /tmp/workspace/Dockerfile
          docker load -i /tmp/workspace/el-patron-api-image.tgz
          docker build --no-cache -t akshay0/el-patron:edge /tmp/workspace
          docker login -u $DOCKER_USER -p $DOCKER_PASS
          docker push akshay0/el-patron:edge
          docker tag akshay0/el-patron:edge "akshay0/el-patron:$CIRCLE_WORKFLOW_ID"
          docker push "akshay0/el-patron:$CIRCLE_WORKFLOW_ID"
  ship-it:
    docker:
    - image: docker:stable
    steps:
    - checkout
    - setup_remote_docker
    - run:
        name: Create final docker image
        command: |
          set -e

          version=$(cat package.yaml| grep '^version' | awk '{print $2}' | xargs echo)

          docker login -u $DOCKER_USER -p $DOCKER_PASS
          docker pull "akshay0/el-patron:$CIRCLE_WORKFLOW_ID"
          docker tag "akshay0/el-patron:$CIRCLE_WORKFLOW_ID" "akshay0/el-patron:$version"
          docker push "akshay0/el-patron:$version"
          git tag "v$version"
          git push --tags
workflows:
  version: 2
  build:
    jobs:
    - build-elm
    - build-haskell
    - add-compiled-elm-to-docker-image:
        requires:
        - build-elm
        - build-haskell
    - set-sail:
        type: approval
        requires:
        - add-compiled-elm-to-docker-image
    - ship-it:
        requires:
        - set-sail
