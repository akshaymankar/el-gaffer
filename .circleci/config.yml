version: 2
jobs:
  build-elm:
    docker:
    - image: akshay0/elm-ci
    steps:
    - checkout
    - run:
        name: Run Tests
        command: cd elm && sysconfcpus -n 2 elm test
    - run:
        name: Build static site for CFCR
        command: cd elm && ELM_APP_BACKEND_URL=https://locks-api.kubo.sh sysconfcpus -n 2 elm app build
    - setup_remote_docker
    - run:
        name: Install docker client
        command: |
          set -x
          VER="17.03.0-ce"
          curl -L -o /tmp/docker-$VER.tgz https://download.docker.com/linux/static/stable/x86_64/docker-$VER.tgz
          tar -xz -C /tmp -f /tmp/docker-$VER.tgz
          mv /tmp/docker/* /usr/bin
    - run:
        name: Build image for CFCR
        command: |
            docker build -t akshay0/el-patron:cfcr-latest elm
    - run:
        name: Push image for CFCR
        command: |
          docker login -u $DOCKER_USER -p $DOCKER_PASS && \
            docker push akshay0/el-patron:cfcr-latest

  build-haskell:
    docker:
    - image: quay.io/haskell_works/stack-build-icu:latest
    steps:
    - checkout
    - setup_remote_docker
    - run:
        name: Install Docker client
        command: |
          set -x
          VER="17.03.0-ce"
          curl -L -o /tmp/docker-$VER.tgz https://download.docker.com/linux/static/stable/x86_64/docker-$VER.tgz
          tar -xz -C /tmp -f /tmp/docker-$VER.tgz
          mv /tmp/docker/* /usr/bin

    - run:
        name: Get resolver version
        command: grep '^resolver' stack.yaml | awk '{print $2}' > resolver.txt

    - restore_cache:
        keys:
        - stack-{{ checksum "resolver.txt" }}

    - run:
        name: Stack setup
        command: stack setup

    - run:
        name: Compile
        command: stack test --no-run-tests

    - save_cache:
        key: stack-{{ checksum "resolver.txt" }}
        paths:
          - ~/.stack

    - run:
        name: Run Tests
        command: stack test

    - run:
        name: Create base image
        command: docker build --no-cache -t akshay0/el-patron-api-base -f Dockerfile.base .

    - run:
        name: Build Image
        command: stack image container

    - run:
        name: Push latest image
        command: |
          docker login -u $DOCKER_USER -p $DOCKER_PASS && \
            docker run --rm akshay0/el-patron-api:latest el-patron-api --help && \
            docker push akshay0/el-patron-api:latest
workflows:
  version: 2
  build:
    jobs:
    - build-elm
    - build-haskell
